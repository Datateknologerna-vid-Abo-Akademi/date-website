services:
  db:
    image: postgres:${DATE_POSTGRESQL_VERSION}-alpine
    restart: unless-stopped
    volumes:
      - date_postgres_data:/var/lib/postgresql/data/
    ports:
      - ${DB_PORT}:5432
    env_file:
      - ${ENV_FILE}
    healthcheck:
      test: pg_isready -d ${DB_DATABASE} -U ${DB_USERNAME}
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  web:
    build: .
    restart: unless-stopped
    command: /bin/bash ./web.dev.sh
    ports:
      - ${DJANGO_PORT}:8000
    env_file:
      - ${ENV_FILE}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    develop:
      watch:
        - path: "."
          action: sync
          target: "/code"

  celery:
    restart: unless-stopped
    build: .
    command: celery -A core worker -l info -c 2
    volumes:
      - .:/code
    env_file:
      - ${ENV_FILE}
    depends_on:
      - web
      - redis

  redis:
    restart: unless-stopped
    image: valkey/valkey:7.2-alpine
    ports:
      - ${REDIS_PORT}:6379

volumes:
  date_postgres_data:
