version: '3'

services:
  db:
    image: postgres:${DATE_POSTGRESQL_VERSION}-alpine
    restart: always
    volumes:
      - date_postgres_data:/var/lib/postgresql/data/
    ports:
      - ${DATE_DB_PORT}:5432
    environment:
      - POSTGRES_PASSWORD=${DATE_DB_PASSWORD}
  web:
    build: .
    restart: always
    # igscheduler startup command(nohup python /code/social/igupdate.py &) &&
    command: bash -c "./wait-for-postgres.sh db:5432 && python /code/manage.py migrate --noinput && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - ${DATE_DJANGO_PORT}
    environment:
      - SECRET_KEY=${DATE_SECRET_KEY}
      - DEBUG=${DATE_DEBUG}
      - DEVELOP=${DATE_DEVELOP}
      - DB_PASSWORD=${DATE_DB_PASSWORD}
      - USE_S3=${USE_S3}
      - AWS_S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_KEY}
      - AWS_STORAGE_BUCKET_NAME=${S3_BUCKET_NAME}
      - PUBLIC_MEDIA_LOCATION=${PUBLIC_MEDIA_LOCATION}
      - PRIVATE_MEDIA_LOCATION=${PRIVATE_MEDIA_LOCATION}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - EXTRA_STAFF_GROUPS=${EXTRA_STAFF_GROUPS}

    depends_on:
      - db

  redis:
    restart: always
    image: redis:7.0-alpine
    ports:
      - ${REDIS_PORT}:6379

  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    ports:
      - "${DATE_DJANGO_PORT}:${DATE_DJANGO_PORT}"

volumes:
  date_postgres_data:

networks:
  default:
    driver: bridge
    name: web
